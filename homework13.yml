---
- name: create aws ec2 instances
  hosts: local
  connection: local
  tasks:
    - name: create key pair
      ec2_key:
        name: ansiblekey1
        region: eu-west-1
      register: ansiblekey1

    - name: save ansiblekey1 on localhost
      copy: content="{{ ansiblekey1.key.private_key }}" dest="./ansiblekey1.pem" mode=0600
      when: ansiblekey1.changed

    - name: create vpc
      ec2_vpc_net:
        name: homework
        cidr_block: 172.30.0.0/16
        region: eu-west-1
        tags:
          module: ec2_vpc_net
          this: works
      register: homework

    - name: create security group for buildinstance
      ec2_group:
        name: buildinstance
        description: for build-instance
        vpc_id: "{{ homework.vpc.id }}"
        region: eu-west-1
        rules:
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: 0.0.0.0/0

    - name: create security group for deployinstance
      ec2_group:
        name: deployinstance
        description: for deploy-instance
        vpc_id: "{{ homework.vpc.id }}"
        region: eu-west-1
        rules:
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            from_port: 80
            to_port: 80
            cidr_ip: 0.0.0.0/0

    - name: create subnet for buildinstance
      ec2_vpc_subnet:
        state: present
        vpc_id: "{{ homework.vpc.id }}"
        cidr: 172.30.1.0/24
        resource_tags:
          Name: buildinstance subnet
      register: buildinstance_subnet

    - name: create subnet for deployinstance
      ec2_vpc_subnet:
        state: present
        vpc_id: "{{ homework.vpc.id }}"
        cidr: 172.30.2.0/24
        resource_tags:
          Name: deployinstance subnet
      register: deployinstance_subnet

    - name: create internet gateway
      ec2_vpc_igw:
        vpc_id: "{{ homework.vpc.id }}"
        state: present
      register: igw

    - name: create public subnet routing table
      ec2_vpc_route_table:
        vpc_id: "{{ homework.vpc.id }}"
        region: eu-west-1
        tags:
          Name: public
        subnets:
          - "{{ buildinstance_subnet.subnet.id }}"
          - "{{ deployinstance_subnet.subnet.id }}"
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{ igw.gateway_id }}"
      register: public

    - name: create buildinstance
      ec2:
        key_name: ansiblekey1
        instance_type: t2.micro
        image: ami-0dc8d444ee2a42d8a
        region: eu-west-1
        group: buildinstance
        wait: yes
        vpc_subnet_id: "{{ buildinstance_subnet.subnet.id }}"
        count_tag:
          Name: buildinstance
        exact_count: 1
        instance_tags:
          Name: buildinstance
        assign_public_ip: yes
          register: buildinstance

    - name: add buildinstance to inventory
      add_host:
        name: "{{ item.public_ip }}"
        groups: buildinstance
      loop: "{{ buildinstance.instances }}"

    - name: create deployinstance
      ec2:
        key_name: ansiblekey1
        instance_type: t2.micro
        image: ami-0dc8d444ee2a42d8a
        region: eu-west-1
        group: deployinstance
        wait: yes
        vpc_subnet_id: "{{ deployinstance_subnet.subnet.id }}"
        count_tag:
          Name: deployinstance
        exact_count: 1
        instance_tags:
          Name: deployinstance
        assign_public_ip: yes
      register: deployinstance

    - name: add deployinstance to inventory
      add_host:
        name: "{{ item.public_ip }}"
        groups: deployinstance
      loop: "{{ deployinstance.instances }}"

- name: prepare instance for build
  hosts: buildinstance
  become: yes
  tasks:

    - name: ensure maven is present
      apt:
        name: maven
        state: present

    - name: ensure git is present
      apt:
        name: git
        state: present

    - name: clone boxfuse git repository
      git:
        repo: 'https://github.com/boxfuse/boxfuse-sample-java-war-hello.git'
        dest: /root/
        clone: no

    - name: build the project
      shell: mvn -f boxfuse-sample-java-war-hello/pom.xml package

    - name: fetch war to server
      fetch:
        src: /root/boxfuse-sample-java-war-hello/target/hello-1.0.war
        dest: /tmp/
        flat: yes

- name: run war in deployinstance
  hosts: deployinstance
  become: yes

  tasks:
    - name: ensure tomcat is present
      apt:
        name: tomcat9
        state: present

    - name: ensure tomcat is started
      service:
        name: tomcat9
        state: started

    - name: copy war to prod
      copy:
        src: /tmp/hello-1.0.war
        dest: /var/lib/tomcat9/webapps/